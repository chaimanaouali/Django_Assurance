{% extends 'admin/base-admin.html.twig' %}

{% block title %}User index{% endblock %}

{% block body %}
    <h1>User</h1>
 <div style="margin-bottom: 10px;">
        <input type="text" id="searchInput" onkeyup="searchTable()" placeholder="Write here..." name="text" class="input" style="margin-left: 10px;">
        <div class="paste-button" onmouseleave="hideDropdown()">
        <button class="button" onmouseenter="showDropdown()">Select Attribute &nbsp; ▼</button>
        <div class="dropdown-content" id="searchAttributeDropdown">
            <a href="#" onclick="selectAttribute('id')">Id</a>
            <a href="#" onclick="selectAttribute('email')">Email</a>
            <a href="#" onclick="selectAttribute('nom')">Nom</a>

            <a href="#" onclick="selectAttribute('prenom')">Prenom</a>
            <a href="#" onclick="selectAttribute('roles')">Roles</a>
            <a href="#" onclick="selectAttribute('password')">Password</a>
        </div>
        </div>
    </div>

    <select id="searchAttribute" style="display: none;">
    <option value="id">Id</option>
    <option value="email">Email</option>
    <option value="nom">Nom</option>
    <option value="Prenom">Prenom</option>
    <option value="Roles">Roles</option>
    <option value="Password">Password</option>
    </select>
    </form>
    <table class="table" id="UserTable">
        <thead>
            <tr>
                <th><a href="#" onclick="toggleSorting(0)">Id</a></th>
                <th><a href="#" onclick="toggleSorting(4)">Email</a></th>
                <th><a href="#" onclick="toggleSorting(6)">Nom</a></th>
                <th><a href="#" onclick="toggleSorting(1)">Prenom</a></th>
                <th><a href="#" onclick="toggleSorting(2)">Roles</a></th>
                <th><a href="#" onclick="toggleSorting(3)">Password</a></th>
            </tr>
        </thead>
        <tbody>
            {% for user in users %}
                <tr>
                    <td>{{ user.id }}</td>
                    <td>{{ user.email }}</td>
                    <td>{{ user.getNomUser() }}</td>
                    <td>{{ user.getPrenomUser }}</td>
                    <td>{{ user.roles ? user.roles|json_encode : '' }}</td>
                    <td>{{ user.password }}</td>
                    <td>
                        <a href="{{ path('app_user_show', {'id': user.id}) }}" class="btn btn-success">Afficher</a>
                        <a href="{{ path('app_user_edit', {'id': user.id}) }}" class="btn btn-primary">Modifier</a>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="5">No records trouver</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {# Pagination controls #}
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            {% if currentPage > 1 %}
                <li class="page-item">
                    <a class="page-link" href="{{ path('app_user_index', {'page': currentPage - 1}) }}" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
            {% endif %}

            {% for page in 1..totalPages %}
                <li class="page-item {% if page == currentPage %}active{% endif %}">
                    <a class="page-link" href="{{ path('app_user_index', {'page': page}) }}">{{ page }}</a>
                </li>
            {% endfor %}

            {% if currentPage < totalPages %}
                <li class="page-item">
                    <a class="page-link" href="{{ path('app_user_index', {'page': currentPage + 1}) }}" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            {% endif %}
        </ul>
    </nav>

    <div style="text-align: center; margin-top: 20px;">
        <a href="{{ path('app_user_new') }}" class="btn btn-primary my-3">Créer nouveau</a>
    </div>

    <script>
       var sortOrder = "asc";

    function searchTable() {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("UserTable");
        tr = table.getElementsByTagName("tr");

        // Get the index of the selected attribute from the dropdown
        var attributeIndex = document.getElementById("searchAttribute").selectedIndex;

        for (i = 1; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[attributeIndex];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function toggleSorting(columnIndex) {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("UserTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("td")[columnIndex];
                y = rows[i + 1].getElementsByTagName("td")[columnIndex];

                if (sortOrder === "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (sortOrder === "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
        // Reverse the sorting order for the next click
        sortOrder = sortOrder === "asc" ? "desc" : "asc";
    }

    function showDropdown() {
    var dropdownContent = document.getElementById("searchAttributeDropdown");
    dropdownContent.style.display = "block";
    }

    function hideDropdown() {
    var dropdownContent = document.getElementById("searchAttributeDropdown");
    dropdownContent.style.display = "none";
    }

    function selectAttribute(attribute) {
    document.getElementById("searchAttribute").value = attribute;
    hideDropdown();
    updateButtonText(attribute);
    }

    function updateButtonText(attribute) {
    var button = document.querySelector(".paste-button .button");
    button.textContent = attribute /*+ " &nbsp; ▼"*/;
    }


</script>

<style>
.input {
  border-radius: 10px;
  outline: 2px solid #FEBF00;
  border: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  background-color: #e2e2e2;
  outline-offset: 3px;
  padding: 10px 1rem;
  transition: 0.25s;
}

.input:focus {
  outline-offset: 5px;
  background-color: #fff
}

.paste-button {
  position: relative;
  display: inline-block;
}

.button {
  background-color: #4CAF50;
  color: #ffffff;
  padding: 10px 15px;
  font-size: 15px;
  font-weight: bold;
  border: none;
  border-radius: 15px;
  cursor: pointer;
  margin-left: 10px;
}

.dropdown-content {
  display: none;
  position: absolute;
  z-index: 1;
  min-width: 200px;
  background-color: #ffffff;
  border: 2px solid #4CAF50;
  border-top: none;
  border-radius: 0px 0px 15px 15px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
}

.dropdown-content a {
  color: #4CAF50;
  padding: 8px 10px;
  text-decoration: none;
  display: block;
  transition: 0.1s;
}

.dropdown-content a:hover {
  background-color: #4CAF50;
  color: #ffffff;
}

.paste-button:hover .dropdown-content {
  display: block;
}

</style>
{% endblock %}




